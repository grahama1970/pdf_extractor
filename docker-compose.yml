version: '3.8'
services:
  # PDF Extractor application service
  pdf_extractor:
    container_name: pdf_extractor
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./output:/app/output
      - ./corrections:/app/corrections
      - ./extracted_data:/app/extracted_data
    depends_on:
      redis:
        condition: service_healthy
      arangodb:
        condition: service_healthy
      labelstudio:
        condition: service_started
    environment:
      - OUTPUT_DIR=/app/output
      - CORRECTIONS_DIR=/app/corrections
      - REDIS_URL=redis:6379
      - ARANGO_HOST=arangodb
      - ARANGO_PORT=8529
      - ARANGO_DB=${ARANGO_DB}
      - ARANGO_USERNAME=${ARANGO_USERNAME}
      - ARANGO_PASSWORD=${ARANGO_PASSWORD}
      - LABEL_STUDIO_URL=http://labelstudio:8080
    restart: unless-stopped
    networks:
      - pdf_extraction_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
  
  # Code Execution Service
  code_executor:
    container_name: code_executor
    build:
      context: .
      dockerfile: Dockerfile.code_executor
    restart: unless-stopped
    environment:
      - EXECUTION_TIMEOUT=30
      - MAX_MEMORY_MB=512
      - ALLOWED_MODULES=numpy,pandas,matplotlib,scipy,sklearn
    ports:
      - "8000:8000"
    networks:
      - pdf_extraction_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # SGLang LLM Server
  sglang:
    container_name: sglang
    image: lmsysorg/sglang:latest
    shm_size: '32gb'
    ports:
      - "4000:4000"
    volumes:
      - huggingface_cache:/root/.cache/huggingface
    environment:
      - HF_TOKEN=${HF_TOKEN}
      - NVIDIA_VISIBLE_DEVICES=all
      - PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True
    command: >
      python3 -m sglang.launch_server 
      --model-path meta-llama/CodeLlama-7b-Instruct-hf 
      --host 0.0.0.0 
      --port 4000 
      --trust-remote-code
    restart: unless-stopped
    networks:
      - pdf_extraction_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # LiteLLM Proxy for unified OpenAI-compatible API
  # litellm_proxy:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.litellm-proxy
  #   container_name: litellm_proxy
  #   ports:
  #     - "4100:4000"
  #   volumes:
  #     - ./litellm_config.yaml:/config/litellm_config.yaml

  #   depends_on:
  #     - sglang
  #   networks:
  #     - pdf_extraction_network

  # Label Studio for annotation
  labelstudio:
    container_name: labelstudio
    image: heartexlabs/label-studio:latest
    ports:
      - "8080:8080"
    volumes:
      - label-studio-data:/label-studio/data
      - ./corrections:/label-studio/files/corrections
    environment:
      - LABEL_STUDIO_LOCAL_FILES_SERVING_ENABLED=true
      - LABEL_STUDIO_LOCAL_FILES_DOCUMENT_ROOT=/label-studio/files
      - LABEL_STUDIO_USERNAME=${LABEL_STUDIO_USERNAME}
      - LABEL_STUDIO_PASSWORD=${LABEL_STUDIO_PASSWORD}
    restart: unless-stopped
    networks:
      - pdf_extraction_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis service for caching
  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis_data:/data
    networks:
      - pdf_extraction_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Perplexity Ask Service
  perplexity_ask:
    container_name: perplexity_ask
    image: mcp/perplexity-ask:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - pdf_extraction_network

  # ArangoDB service for document storage
  arangodb:
    container_name: arangodb
    image: arangodb/arangodb:latest
    restart: unless-stopped
    ports:
      - "8529:8529"
    environment:
      - ARANGO_ROOT_PASSWORD=${ARANGO_ROOT_PASSWORD}
      - ARANGODB_USERNAME=${ARANGO_USERNAME}
      - ARANGODB_PASSWORD=${ARANGO_PASSWORD}
      - ARANGODB_DBNAME=${ARANGO_DB}
    volumes:
      - arango_data:/var/lib/arangodb3
      - arango_apps:/var/lib/arangodb3-apps
      - ./schemas:/schemas
    networks:
      - pdf_extraction_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8529/_api/version"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    command: --experimental-vector-index

# Volumes for data persistence
volumes:
  label-studio-data:
  redis_data:
  arango_data:
  arango_apps:
  huggingface_cache:

# Network for service communication
networks:
  pdf_extraction_network:
    driver: bridge
